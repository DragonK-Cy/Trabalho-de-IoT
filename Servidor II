# app.py - Sistema Completo de Monitoramento de Horta Inteligente
from flask import Flask, render_template_string
import random
import threading
import time
from datetime import datetime
import json

app = Flask(__name__)

# Dados dos sensores
dados_sensores = {
    "meteorologia": {
        "temperatura": 25.0,
        "umidade_ar": 60,
        "possibilidade_chuva": 30,
        "sensacao_termica": 26.0,
        "precipitacao_termica": 0
    },
    "agua": {
        "nivel": 50,
        "bomba_ligada": False,
        "historico_bomba": []
    },
    "seguranca": {
        "movimento_detectado": False,
        "pessoa_detectada": "Ningu√©m",
        "autorizado": False,
        "alarme_ativado": False,
        "historico_acessos": []
    }
}

# Banco de dados de pessoas autorizadas
pessoas_autorizadas = {
    "joao": "Jo√£o Silva - Propriet√°rio",
    "maria": "Maria Santos - Jardineira",
    "carlos": "Carlos Oliveira - T√©cnico"
}

# Gera dados meteorol√≥gicos realistas
def gerar_dados_meteorologicos():
    while True:
        temp = round(random.uniform(18.0, 32.0), 1)
        umidade = random.randint(40, 90)
        chance_chuva = random.randint(0, 100)
        
        # C√°lculo da sensa√ß√£o t√©rmica (simplificado)
        sensacao = temp
        if umidade > 70:
            sensacao += round((umidade - 70) * 0.1, 1)
        
        # Precipita√ß√£o t√©rmica (simula√ß√£o)
        precipitacao = 0
        if chance_chuva > 70 and umidade > 75:
            precipitacao = random.randint(1, 10)
        
        dados_sensores['meteorologia'] = {
            "temperatura": temp,
            "umidade_ar": umidade,
            "possibilidade_chuva": chance_chuva,
            "sensacao_termica": sensacao,
            "precipitacao_termica": precipitacao
        }
        time.sleep(5)

# Simula o sistema de √°gua e irriga√ß√£o
def simular_sistema_agua():
    while True:
        nivel = dados_sensores['agua']['nivel']
        bomba_ligada = False
        
        # L√≥gica de acionamento da bomba
        if nivel < 30 and not dados_sensores['agua']['bomba_ligada']:
            bomba_ligada = True
            evento = {
                "horario": datetime.now().strftime("%H:%M:%S"),
                "acao": "Bomba LIGADA",
                "nivel_antes": nivel,
                "nivel_depois": nivel + 40
            }
            dados_sensores['agua']['historico_bomba'].append(evento)
            dados_sensores['agua']['nivel'] = nivel + 40
        
        elif dados_sensores['agua']['bomba_ligada'] and nivel > 80:
            bomba_ligada = False
            evento = {
                "horario": datetime.now().strftime("%H:%M:%S"),
                "acao": "Bomba DESLIGADA",
                "nivel_antes": nivel,
                "nivel_depois": nivel
            }
            dados_sensores['agua']['historico_bomba'].append(evento)
        
        # Consumo gradual de √°gua
        if not bomba_ligada:
            dados_sensores['agua']['nivel'] = max(0, nivel - random.randint(1, 3))
        
        dados_sensores['agua']['bomba_ligada'] = bomba_ligada
        time.sleep(3)

# Simula detec√ß√£o de movimento e reconhecimento
def simular_sistema_seguranca():
    while True:
        # Simula detec√ß√£o a cada 10 segundos
        time.sleep(10)
        
        if random.random() > 0.7:  # 30% de chance de detec√ß√£o
            pessoa_id = random.choice(list(pessoas_autorizadas.keys()) + ["intruso"])
            
            if pessoa_id == "intruso":
                dados_sensores['seguranca'] = {
                    "movimento_detectado": True,
                    "pessoa_detectada": "INTRUSO N√ÉO AUTORIZADO!",
                    "autorizado": False,
                    "alarme_ativado": True,
                    "historico_acessos": dados_sensores['seguranca']['historico_acessos']
                }
                # Mant√©m o alarme por 5 segundos
                time.sleep(5)
                dados_sensores['seguranca']['alarme_ativado'] = False
            else:
                dados_sensores['seguranca'] = {
                    "movimento_detectado": True,
                    "pessoa_detectada": pessoas_autorizadas[pessoa_id],
                    "autorizado": True,
                    "alarme_ativado": False,
                    "historico_acessos": dados_sensores['seguranca']['historico_acessos']
                }
                
                # Registra o acesso
                acesso = {
                    "horario": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                    "pessoa": pessoas_autorizadas[pessoa_id],
                    "autorizado": True
                }
                dados_sensores['seguranca']['historico_acessos'].append(acesso)
                
                # Limita o hist√≥rico aos √∫ltimos 10 eventos
                if len(dados_sensores['seguranca']['historico_acessos']) > 10:
                    dados_sensores['seguranca']['historico_acessos'].pop(0)
        else:
            dados_sensores['seguranca']['movimento_detectado'] = False

# P√°gina HTML completa
HTML_PAGE = """
<!DOCTYPE html>
<html>
<head>
    <title>Sistema Inteligente de Horta</title>
    <meta http-equiv="refresh" content="5">
    <style>
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
            margin: 0; 
            padding: 20px; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        
        h1 { 
            text-align: center; 
            color: #2c3e50; 
            margin-bottom: 30px;
        }
        
        .dashboard {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .card {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid #3498db;
        }
        
        .card.alarme {
            border-left-color: #e74c3c;
            background: #ffe6e6;
            animation: piscar 1s infinite;
        }
        
        .card.autorizado {
            border-left-color: #27ae60;
            background: #e6ffe6;
        }
        
        .card.bomba {
            border-left-color: #f39c12;
            background: #fff3e6;
        }
        
        @keyframes piscar {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
        
        .valor {
            font-size: 28px;
            font-weight: bold;
            color: #2c3e50;
            margin: 10px 0;
        }
        
        .info {
            color: #7f8c8d;
            font-size: 14px;
        }
        
        .historico {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
        }
        
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        th {
            background-color: #f2f2f2;
        }
        
        .status {
            padding: 5px 10px;
            border-radius: 5px;
            font-weight: bold;
        }
        
        .autorizado { background: #d4edda; color: #155724; }
        .nao-autorizado { background: #f8d7da; color: #721c24; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üåø Sistema Inteligente de Monitoramento de Horta</h1>
        
        <div class="dashboard">
            <!-- Meteorologia -->
            <div class="card">
                <h2>üå§Ô∏è Meteorologia</h2>
                <div class="valor">{{ meteo.temperatura }}¬∞C</div>
                <div class="info">Sensa√ß√£o: {{ meteo.sensacao_termica }}¬∞C</div>
                <div class="info">Umidade: {{ meteo.umidade_ar }}%</div>
                <div class="info">Chuva: {{ meteo.possibilidade_chuva }}%</div>
                <div class="info">Precipita√ß√£o: {{ meteo.precipitacao_termica }}mm</div>
            </div>
            
            <!-- Sistema de √Ågua -->
            <div class="card {% if agua.bomba_ligada %}bomba{% endif %}">
                <h2>üíß Sistema de √Ågua</h2>
                <div class="valor">{{ agua.nivel }}%</div>
                <div class="info">Bomba: {% if agua.bomba_ligada %}üî¥ LIGADA{% else %}üü¢ DESLIGADA{% endif %}</div>
                <div class="info">√öltima irriga√ß√£o: {% if agua.historico_bomba %}{{ agua.historico_bomba[-1].horario }}{% else %}Nenhuma{% endif %}</div>
            </div>
            
            <!-- Seguran√ßa -->
            <div class="card {% if seguranca.alarme_ativado %}alarme{% elif seguranca.autorizado %}autorizado{% endif %}">
                <h2>üîê Sistema de Seguran√ßa</h2>
                <div class="valor">{% if seguranca.movimento_detectado %}{{ seguranca.pessoa_detectada }}{% else %}Sem movimento{% endif %}</div>
                <div class="info">Status: {% if seguranca.alarme_ativado %}üö® ALARME ATIVADO{% elif seguranca.autorizado %}‚úÖ Autorizado{% else %}‚è≥ Monitorando{% endif %}</div>
            </div>
        </div>
        
        <!-- Hist√≥rico -->
        <div class="historico">
            <h2>üìä Hist√≥rico de Eventos</h2>
            <table>
                <tr>
                    <th>Hor√°rio</th>
                    <th>Evento</th>
                    <th>Detalhes</th>
                </tr>
                {% for evento in agua.historico_bomba[-5:]|reverse %}
                <tr>
                    <td>{{ evento.horario }}</td>
                    <td>üö∞ Irriga√ß√£o</td>
                    <td>{{ evento.acao }} - N√≠vel: {{ evento.nivel_antes }}% ‚Üí {{ evento.nivel_depois }}%</td>
                </tr>
                {% endfor %}
                {% for acesso in seguranca.historico_acessos[-5:]|reverse %}
                <tr>
                    <td>{{ acesso.horario }}</td>
                    <td>üë§ Acesso</td>
                    <td><span class="status {% if acesso.autorizado %}autorizado{% else %}nao-autorizado{% endif %}">
                        {{ acesso.pessoa }}
                    </span></td>
                </tr>
                {% endfor %}
            </table>
        </div>
        
        <div class="info" style="text-align: center; margin-top: 30px;">
            √öltima atualiza√ß√£o: {{ timestamp }}
        </div>
    </div>
</body>
</html>
"""

@app.route('/')
def index():
    return render_template_string(HTML_PAGE, 
                                meteo=dados_sensores['meteorologia'],
                                agua=dados_sensores['agua'],
                                seguranca=dados_sensores['seguranca'],
                                timestamp=datetime.now().strftime("%Y-%m-%d %H:%M:%S"))

# Inicia todas as simula√ß√µes
threading.Thread(target=gerar_dados_meteorologicos, daemon=True).start()
threading.Thread(target=simular_sistema_agua, daemon=True).start()
threading.Thread(target=simular_sistema_seguranca, daemon=True).start()

if __name__ == '__main__':
    print("üåø Sistema Inteligente de Horta Iniciado!")
    print("üìä Acesse: http://localhost:5000")
    print("üîÑ Dados atualizando automaticamente...")
    app.run(debug=True, use_reloader=False)